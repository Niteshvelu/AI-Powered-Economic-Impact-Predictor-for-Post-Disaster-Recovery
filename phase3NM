import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Simulated dataset
data = {
    'Severity': [1, 3, 4, 5, 6, 7, 8, 9, 10],
    'Area_Affected': [10, 50, 100, 200, 300, 400, 500, 600, 700],
    'Population_Density': [100, 150, 200, 250, 300, 400, 450, 500, 600],
    'Economic_Loss': [5, 15, 25, 45, 60, 85, 110, 130, 160]  # in million $
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Features and target
X = df[['Severity', 'Area_Affected', 'Population_Density']]
y = df['Economic_Loss']

# Train model
model = LinearRegression()
model.fit(X, y)

# Predict on new data
new_disaster = np.array([[8, 550, 420]])  # Severity=8, Area=550, PopDensity=420
predicted_loss = model.predict(new_disaster)
print(f"Predicted Economic Loss (in million $): {predicted_loss[0]:.2f}")

# Optional: Plot actual vs predicted
y_pred = model.predict(X)
plt.scatter(y, y_pred)
plt.xlabel("Actual Loss")
plt.ylabel("Predicted Loss")
plt.title("Actual vs Predicted Economic Loss")
plt.grid(True)
plt.show()
